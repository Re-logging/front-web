# .github/workflows/release.yml
name: Release Process

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'release/**'

jobs:
  create-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version from package.json
        id: version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Create Release Notes
        id: release_notes
        run: |
          # 이전 태그부터의 커밋 메시지 수집
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s")
          else
            COMMITS=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s")
          fi

          # 릴리스 노트 생성
          echo "# Changes in this Release" > release_notes.md
          echo "" >> release_notes.md
          echo "## Features" >> release_notes.md
          echo "$COMMITS" | grep "^- feat:" >> release_notes.md || true
          echo "" >> release_notes.md
          echo "## Bug Fixes" >> release_notes.md
          echo "$COMMITS" | grep "^- fix:" >> release_notes.md || true

          # GitHub Actions에서 사용할 수 있도록 처리
          cat release_notes.md

      - name: Create Tag and Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Merge back to develop
        run: |
          git checkout develop
          git merge --no-ff main
          git push origin develop
